class Modal{constructor(t){this.modal=t,this.modalID=t.id,this.modalClosingElements=this.modal.querySelectorAll('[data-close="modal"]'),this.modalClickableElements=null,this.modalOpenButton=document.querySelector(`[data-target='${this.modalID}']`),this.displayClicksCounter=this.modal.querySelector("#counterOutput"),this.bodyDOM=document.querySelector("body"),this.clearCounterButton=null,this.countButtonClicks=JSON.parse(localStorage.getItem(""+this.modalID))||0,this.darkOverlay=null,this.counterLimit=5}incrementCounter=()=>{this.countButtonClicks++,this.displayCounter(),!this.clearCounterButton&&this.countButtonClicks>this.counterLimit&&(this.appendResetButton(),this.clearCounterButton.addEventListener("click",this.clearCounter))};initCounter=()=>{this.incrementCounter(),localStorage.getItem(""+this.modalID)||localStorage.setItem(""+this.modalID,JSON.stringify(this.countButtonClicks))};saveCounter=()=>localStorage.setItem(""+this.modalID,JSON.stringify(this.countButtonClicks));clearCounter=()=>{this.countButtonClicks=0,localStorage.removeItem(""+this.modalID),this.clearCounterButton.remove(),this.clearCounterButton=null,this.modalClickableElements[0].focus(),this.displayCounter()};displayCounter=()=>this.displayClicksCounter.textContent=this.countButtonClicks+" times";moveFocusForward=(t,e)=>{t===this.modalClickableElements[this.modalClickableElements.length-1]&&(e.preventDefault(),this.modalClickableElements[0].focus())};moveFocusBackward=(t,e)=>{t===this.modalClickableElements[0]&&(e.preventDefault(),this.modalClickableElements[this.modalClickableElements.length-1].focus())};handleKeydown=t=>{this.modalClickableElements=this.modal.querySelectorAll("a[href], button:not([disabled])"),"Tab"===t.key&&(t.shiftKey?this.moveFocusBackward(document.activeElement,t):this.moveFocusForward(document.activeElement,t))};appendResetButton=()=>{this.modal.insertAdjacentHTML("beforeend",`
      <button type="button" class="btn btn__secondary btn-small" data-clear="modal" aria-label="Reset modal counter">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
            <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
          </svg>
          Reset
      </button>
    `),this.clearCounterButton=this.modal.querySelector('[data-clear="modal"]'),this.modalClickableElements=this.modal.querySelectorAll("a[href], button:not([disabled])")};appendDarkOverlay=()=>{this.bodyDOM.insertAdjacentHTML("beforeend",'<div class="modal-overlay"></div>'),this.bodyDOM.classList.add("modal-active"),this.darkOverlay=document.querySelector(".modal-overlay"),this.darkOverlay.addEventListener("click",this.closeModal)};openModal=()=>{this.modal.ariaHidden=!1,this.modal.ariaModal=!0,this.modal.style.display="block",this.appendDarkOverlay(),this.modalClosingElements[0].focus()};closeModal=()=>{this.modal.ariaHidden=!0,this.modal.ariaModal=!1,this.modal.style.display="none",this.darkOverlay.remove(),this.bodyDOM.classList.remove("modal-active"),this.saveCounter(),this.modalOpenButton.focus(),this.modalClickableElements=null,this.modal.removeEventListener("keydown",this.handleKeydown)};handleCloseMethods=()=>{Array.from(this.modalClosingElements).forEach(t=>t.addEventListener("click",this.closeModal)),window.addEventListener("keydown",t=>{"Escape"===t.key&&this.closeModal()})};init=()=>{this.modalOpenButton.addEventListener("click",()=>{this.openModal(),this.initCounter(),this.handleCloseMethods()}),this.modal.addEventListener("keydown",t=>this.handleKeydown(t)),this.modal.ariaHidden=!0}}const myModal=new Modal(document.querySelector("#exampleModal")).init();